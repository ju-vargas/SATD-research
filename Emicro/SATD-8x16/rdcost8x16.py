def had_8x16_precise():
    k = 0
    jj = 0 

    diff = [0] * 128

    piCur = 0
    piOrg = 0

    for k in range(0, 128, 8):
        diff[k + 0] = Org[k + 0] - Cur[k + 0]
        diff[k + 1] = Org[k + 1] - Cur[k + 1]
        diff[k + 2] = Org[k + 2] - Cur[k + 2]
        diff[k + 3] = Org[k + 3] - Cur[k + 3]
        diff[k + 4] = Org[k + 4] - Cur[k + 4]
        diff[k + 5] = Org[k + 5] - Cur[k + 5]
        diff[k + 6] = Org[k + 6] - Cur[k + 6]
        diff[k + 7] = Org[k + 7] - Cur[k + 7]

    #print("Org")
    #print(Org)

    #print("Cur")
    #print(Cur)

    #print("diff")
    #print(diff)

    #horizontal
    for j in range(16):
        jj = j << 3


        m2[j][0] = diff[jj] + diff[jj + 4]
        m2[j][1] = diff[jj + 1] + diff[jj + 5]
        m2[j][2] = diff[jj + 2] + diff[jj + 6]
        m2[j][3] = diff[jj + 3] + diff[jj + 7]
        m2[j][4] = diff[jj] - diff[jj + 4]
        m2[j][5] = diff[jj + 1] - diff[jj + 5]
        m2[j][6] = diff[jj + 2] - diff[jj + 6]
        m2[j][7] = diff[jj + 3] - diff[jj + 7]

        m1[j][0] = m2[j][0] + m2[j][2]
        m1[j][1] = m2[j][1] + m2[j][3]
        m1[j][2] = m2[j][0] - m2[j][2]
        m1[j][3] = m2[j][1] - m2[j][3]
        m1[j][4] = m2[j][4] + m2[j][6]
        m1[j][5] = m2[j][5] + m2[j][7]
        m1[j][6] = m2[j][4] - m2[j][6]
        m1[j][7] = m2[j][5] - m2[j][7]

        m2[j][0] = m1[j][0] + m1[j][1]
        m2[j][1] = m1[j][0] - m1[j][1]
        m2[j][2] = m1[j][2] + m1[j][3]
        m2[j][3] = m1[j][2] - m1[j][3]
        m2[j][4] = m1[j][4] + m1[j][5]
        m2[j][5] = m1[j][4] - m1[j][5]
        m2[j][6] = m1[j][6] + m1[j][7]
        m2[j][7] = m1[j][6] - m1[j][7]
      

      #vertical
    for i in range(8):

        m1[0][i] = m2[0][i] + m2[8][i]
        m1[1][i] = m2[1][i] + m2[9][i]
        m1[2][i] = m2[2][i] + m2[10][i]
        m1[3][i] = m2[3][i] + m2[11][i]
        m1[4][i] = m2[4][i] + m2[12][i]
        m1[5][i] = m2[5][i] + m2[13][i]
        m1[6][i] = m2[6][i] + m2[14][i]
        m1[7][i] = m2[7][i] + m2[15][i]
        m1[8][i] = m2[0][i] - m2[8][i]
        m1[9][i] = m2[1][i] - m2[9][i]
        m1[10][i] = m2[2][i] - m2[10][i]
        m1[11][i] = m2[3][i] - m2[11][i]
        m1[12][i] = m2[4][i] - m2[12][i]
        m1[13][i] = m2[5][i] - m2[13][i]
        m1[14][i] = m2[6][i] - m2[14][i]
        m1[15][i] = m2[7][i] - m2[15][i]

        m2[0][i] = m1[0][i] + m1[4][i]
        m2[1][i] = m1[1][i] + m1[5][i]
        m2[2][i] = m1[2][i] + m1[6][i]
        m2[3][i] = m1[3][i] + m1[7][i]
        m2[4][i] = m1[0][i] - m1[4][i]
        m2[5][i] = m1[1][i] - m1[5][i]
        m2[6][i] = m1[2][i] - m1[6][i]
        m2[7][i] = m1[3][i] - m1[7][i]
        m2[8][i] = m1[8][i] + m1[12][i]
        m2[9][i] = m1[9][i] + m1[13][i]
        m2[10][i] = m1[10][i] + m1[14][i]
        m2[11][i] = m1[11][i] + m1[15][i]
        m2[12][i] = m1[8][i] - m1[12][i]
        m2[13][i] = m1[9][i] - m1[13][i]
        m2[14][i] = m1[10][i] - m1[14][i]
        m2[15][i] = m1[11][i] - m1[15][i]

        m1[0][i] = m2[0][i] + m2[2][i]
        m1[1][i] = m2[1][i] + m2[3][i]
        m1[2][i] = m2[0][i] - m2[2][i]
        m1[3][i] = m2[1][i] - m2[3][i]
        m1[4][i] = m2[4][i] + m2[6][i]
        m1[5][i] = m2[5][i] + m2[7][i]
        m1[6][i] = m2[4][i] - m2[6][i]
        m1[7][i] = m2[5][i] - m2[7][i]
        m1[8][i] = m2[8][i] + m2[10][i]
        m1[9][i] = m2[9][i] + m2[11][i]
        m1[10][i] = m2[8][i] - m2[10][i]
        m1[11][i] = m2[9][i] - m2[11][i]
        m1[12][i] = m2[12][i] + m2[14][i]
        m1[13][i] = m2[13][i] + m2[15][i]
        m1[14][i] = m2[12][i] - m2[14][i]
        m1[15][i] = m2[13][i] - m2[15][i]

        m2[0][i] = m1[0][i] + m1[1][i]
        m2[1][i] = m1[0][i] - m1[1][i]
        m2[2][i] = m1[2][i] + m1[3][i]
        m2[3][i] = m1[2][i] - m1[3][i]
        m2[4][i] = m1[4][i] + m1[5][i]
        m2[5][i] = m1[4][i] - m1[5][i]
        m2[6][i] = m1[6][i] + m1[7][i]
        m2[7][i] = m1[6][i] - m1[7][i]
        m2[8][i] = m1[8][i] + m1[9][i]
        m2[9][i] = m1[8][i] - m1[9][i]
        m2[10][i] = m1[10][i] + m1[11][i]
        m2[11][i] = m1[10][i] - m1[11][i]
        m2[12][i] = m1[12][i] + m1[13][i]
        m2[13][i] = m1[12][i] - m1[13][i]
        m2[14][i] = m1[14][i] + m1[15][i]
        m2[15][i] = m1[14][i] - m1[15][i]
      
    sad = 0
    for i in range(16):
        for j in range(8):
            sad += abs(m2[i][j])


    print("SATD:", sad)

def had_8x16_3():
    k = 0
    jj = 0 

    diff = [0] * 128

    piCur = 0
    piOrg = 0

    for k in range(0, 128, 8):
        diff[k + 0] = Org[k + 0] - Cur[k + 0]
        diff[k + 1] = Org[k + 1] - Cur[k + 1]
        diff[k + 2] = Org[k + 2] - Cur[k + 2]
        diff[k + 3] = Org[k + 3] - Cur[k + 3]
        diff[k + 4] = Org[k + 4] - Cur[k + 4]
        diff[k + 5] = Org[k + 5] - Cur[k + 5]
        diff[k + 6] = Org[k + 6] - Cur[k + 6]
        diff[k + 7] = Org[k + 7] - Cur[k + 7]

    #print("Org")
    #print(Org)

    #print("Cur")
    #print(Cur)

    #print("diff")
    #print(diff)

    #horizontal
    for j in range(16):
        jj = j << 3


        m2[j][0] = diff[jj] + diff[jj + 4]
        m2[j][1] = diff[jj + 1] + diff[jj + 5]
        m2[j][2] = diff[jj + 2] + diff[jj + 6]
        m2[j][3] = diff[jj + 3] + diff[jj + 7]
        m2[j][4] = diff[jj] - diff[jj + 4]
        m2[j][5] = diff[jj + 1] - diff[jj + 5]
        m2[j][6] = diff[jj + 2] - diff[jj + 6]
        m2[j][7] = diff[jj + 3] - diff[jj + 7]

        m1[j][0] = m2[j][0] + m2[j][2]
        m1[j][1] = m2[j][1] + m2[j][3]
        m1[j][2] = m2[j][0] - m2[j][2]
        m1[j][3] = m2[j][1] - m2[j][3]
        m1[j][4] = m2[j][4] + m2[j][6]
        m1[j][5] = m2[j][5] + m2[j][7]
        m1[j][6] = m2[j][4] - m2[j][6]
        m1[j][7] = m2[j][5] - m2[j][7]

        m2[j][0] = m1[j][0] + m1[j][1]
        m2[j][1] = m1[j][0] - m1[j][1]
        m2[j][2] = m1[j][2] + m1[j][3]
        m2[j][3] = m1[j][2] - m1[j][3]
        m2[j][4] = m1[j][4] + m1[j][5]
        m2[j][5] = m1[j][4] - m1[j][5]
        m2[j][6] = m1[j][6] + m1[j][7]
        m2[j][7] = m1[j][6] - m1[j][7]
      

      #vertical
    for i in range(8):

        m1[0][i] = m2[0][i] + m2[8][i]
        m1[1][i] = m2[1][i] + m2[9][i]
        m1[2][i] = m2[2][i] + m2[10][i]
        m1[3][i] = m2[3][i] + m2[11][i]
        m1[4][i] = m2[4][i] + m2[12][i]
        m1[5][i] = m2[5][i] + m2[13][i]
        m1[6][i] = m2[6][i] + m2[14][i]
        m1[7][i] = m2[7][i] + m2[15][i]
        m1[8][i] = m2[0][i] - m2[8][i]
        m1[9][i] = m2[1][i] - m2[9][i]
        m1[10][i] = m2[2][i] - m2[10][i]
        m1[11][i] = m2[3][i] - m2[11][i]
        m1[12][i] = m2[4][i] - m2[12][i]
        m1[13][i] = m2[5][i] - m2[13][i]
        m1[14][i] = m2[6][i] - m2[14][i]
        m1[15][i] = m2[7][i] - m2[15][i]
   
      
    sad = 0
    for i in range(16):
        for j in range(8):
            sad += abs(m1[i][j])


    print("SATD -3:", sad)
def had_8x16_4():
    k = 0
    jj = 0 

    diff = [0] * 128

    piCur = 0
    piOrg = 0

    for k in range(0, 128, 8):
        diff[k + 0] = Org[k + 0] - Cur[k + 0]
        diff[k + 1] = Org[k + 1] - Cur[k + 1]
        diff[k + 2] = Org[k + 2] - Cur[k + 2]
        diff[k + 3] = Org[k + 3] - Cur[k + 3]
        diff[k + 4] = Org[k + 4] - Cur[k + 4]
        diff[k + 5] = Org[k + 5] - Cur[k + 5]
        diff[k + 6] = Org[k + 6] - Cur[k + 6]
        diff[k + 7] = Org[k + 7] - Cur[k + 7]

    #print("Org")
    #print(Org)

    #print("Cur")
    #print(Cur)

    #print("diff")
    #print(diff)

    #horizontal
    for j in range(16):
        jj = j << 3


        m2[j][0] = diff[jj] + diff[jj + 4]
        m2[j][1] = diff[jj + 1] + diff[jj + 5]
        m2[j][2] = diff[jj + 2] + diff[jj + 6]
        m2[j][3] = diff[jj + 3] + diff[jj + 7]
        m2[j][4] = diff[jj] - diff[jj + 4]
        m2[j][5] = diff[jj + 1] - diff[jj + 5]
        m2[j][6] = diff[jj + 2] - diff[jj + 6]
        m2[j][7] = diff[jj + 3] - diff[jj + 7]

        m1[j][0] = m2[j][0] + m2[j][2]
        m1[j][1] = m2[j][1] + m2[j][3]
        m1[j][2] = m2[j][0] - m2[j][2]
        m1[j][3] = m2[j][1] - m2[j][3]
        m1[j][4] = m2[j][4] + m2[j][6]
        m1[j][5] = m2[j][5] + m2[j][7]
        m1[j][6] = m2[j][4] - m2[j][6]
        m1[j][7] = m2[j][5] - m2[j][7]

        m2[j][0] = m1[j][0] + m1[j][1]
        m2[j][1] = m1[j][0] - m1[j][1]
        m2[j][2] = m1[j][2] + m1[j][3]
        m2[j][3] = m1[j][2] - m1[j][3]
        m2[j][4] = m1[j][4] + m1[j][5]
        m2[j][5] = m1[j][4] - m1[j][5]
        m2[j][6] = m1[j][6] + m1[j][7]
        m2[j][7] = m1[j][6] - m1[j][7]
      

      #vertical

    sad = 0
    for i in range(16):
        for j in range(8):
            sad += abs(m2[i][j])


    print("SATD -4:", sad)

m1 = [[0] * 8 for _ in range(16)]
m2 = [[0] * 8 for _ in range(16)]

Cur = [862 ,3257,365 ,3683,1493,2417,1994,2862,467 ,3229,1272,2486,1895,3730,917 ,2730,750 ,3666,414 ,3473,1455,2298,1619,2718,889 ,3384,2005,2613,469 ,3921,1246,2506,307 ,3485,850 ,3788,1207,2201,1870,2711,482 ,3702,1957,2253,757 ,3250,1365,2763,408 ,3441,846 ,3764,1230,2378,1941,2707,347 ,3637,1879,2347,730 ,3257,1500,2668,663 ,3276,469 ,3755,1257,2398,1937,2671,995 ,3790,1878,2410,636 ,3403,1431,2789,882 ,3533,477 ,3793,1391,2516,1750,2745,811 ,3658,1943,2217,691 ,3377,1502,2834,733 ,3281,426 ,3633,1210,2461,1890,2653,915 ,3406,1770,2531,630 ,3797,1485,2921,878 ,3258,349 ,3633,1493,2419,1962,2670,923 ,3734,1658,2471,699 ,3349,1238,2900]




Org = [2398,750 ,3666,414 ,3473,1455,2417,1994,2862,1619,2718,889 ,3384,2005,2613,469 ,730 ,3257,1500,2668,663 ,3921,1246,2506,307 ,3485,850 ,3788,1207,2201,1870,2711,482 ,3702,1957,2253,757 ,3250,1365,2763,408 ,3441,846 ,3764,1230,2378,1941,2707,347 ,3637,1879,2347,3276,469 ,3755,1257,1937,2671,995 ,3790,1878,2410,636 ,3403,1431,2789,1770,2531,630 ,3797,1485,2921,882 ,3533,477 ,3793,1391,2516,1750,2745,811 ,3658,1943,2217,691 ,3377,1502,2834,733 ,3281,426 ,3633,1210,2461,1890,2653,915 ,3406,878 ,3258,349 ,467 ,3229,1272,2298,3633,1493,2419,1962,2670,923 ,862 ,3257,365 ,3683,1493,2486,1895,3730,917 ,2730,3734,1658,2471,699 ,3349,1238,2900]
    


had_8x16_precise()
had_8x16_3()
had_8x16_4()
