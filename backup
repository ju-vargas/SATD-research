	
	//outputs	
	always @(posedge clk) begin		
		case(stage) 
			stage_zero: begin
				case(count) 
				endcase
			end
			stage_one: begin
				case(count) 
				endcase
			end
			stage_two: begin
				case(count) 
				endcase
			end
			stage_three: begin
				case(count) 
				endcase				
			end
		endcase
	end


		ORG_reg[0] <= ORG[7:0];
		ORG_reg[1] <= ORG[15:8];
		ORG_reg[2] <= ORG[23:16];
		ORG_reg[3] <= ORG[31:24];
		ORG_reg[4] <= ORG[39:32];
		ORG_reg[5] <= ORG[47:40];
		ORG_reg[6] <= ORG[55:48];
		ORG_reg[7] <= ORG[63:56];
		
		CUR_reg[0] <= CUR[7:0];
		CUR_reg[1] <= CUR[15:8];
		CUR_reg[2] <= CUR[23:16];
		CUR_reg[3] <= CUR[31:24];
		CUR_reg[4] <= CUR[39:32];
		CUR_reg[5] <= CUR[47:40];
		CUR_reg[6] <= CUR[55:48];
		CUR_reg[7] <= CUR[63:56];		
